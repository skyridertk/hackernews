{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["DEFAULT_QUERY","PATH_BASE","console","log","concat","Component","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","results","searchKey","searchTerm","error","isLoading","setSearchTopStories","bind","assertThisInitialized","onDismiss","onSearchChange","onSearchSubmit","fetchSearchTopStories","needsToSearchTopStories","result","hits","page","_this$state","oldhits","updatedHits","toConsumableArray","setState","objectSpread","defineProperty","_this2","arguments","length","undefined","axios","then","data","catch","event","preventDefault","id","_this$state2","_results$searchKey","filter","item","objectID","target","value","_this3","_this$state3","isSortReverse","sortKey","react_default","a","createElement","className","App_Search","onChange","onSubmit","App_Table","ButtonWithLoading","onClick","Search","_ref","children","type","Table","_this4","onSort","isSortReversed","_this$props","_this$state4","sortedList","reverseSortedList","style","width","App_Sort","activeSortKey","map","key","href","url","title","author","num_comments","points","App_Button","Sort","_ref2","sortClass","push","join","Button","_ref3","Loading","_ref4","rest","objectWithoutProperties","App_Loading","Boolean","window","location","hostname","match","React","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42264abc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {sortBy} from 'lodash';\r\n\r\nconst DEFAULT_QUERY = 'redux';\r\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nconst PATH_SEARCH = '/search';\r\nconst PARAM_SEARCH = 'query=';\r\nconst PARAM_PAGE = 'page=';\r\nconst DEFAULT_HPP = '100';\r\nconst PARAM_HPP = 'hitsPerPage=';\r\n\r\nconst list = [{\r\n  title:'React',\r\n  url:'https://facebook.github.io/react',\r\n  author:'Jordan Walke',\r\n  num_comments:3,\r\n  points:4,\r\n  objectID:2,\r\n},{\r\n  title:'Redux',\r\n  url:'https://github.com/reactjs/redux',\r\n  author:'Dan Abramov, Andrew Clark',\r\n  num_comments:2,\r\n  points:5,\r\n  objectID: 1,\r\n},{\r\n  title:'Jsx',\r\n  url:'https://github.com/reactjs/redux',\r\n  author:'Javascript Corp',\r\n  num_comments:10,\r\n  points:2,\r\n  objectID: 3,\r\n}];\r\nlet searchTerm = 'redux';\r\nlet page = '0';\r\nconsole.log(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`);\r\n\r\n//const isSearched = searchTerm => item => item.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n  POINTS: list => sortBy(list, 'points').reverse(),\r\n};\r\nexport default class App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '',\r\n      searchTerm: DEFAULT_QUERY,\r\n      error: null,\r\n      isLoading: false,\r\n    };\r\n    //bind class methods to this if they want to access this\r\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\r\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\r\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\r\n  }\r\n\r\n  \r\n  needsToSearchTopStories(searchTerm){\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setSearchTopStories(result){\r\n    const { hits, page } = result;\r\n    const { searchKey, results }=this.state;\r\n\r\n    const oldhits = results && results[searchKey]? results[searchKey].hits: [];\r\n\r\n    const updatedHits = [\r\n      ...oldhits,\r\n      ...hits\r\n    ];\r\n\r\n    this.setState({\r\n      results: {\r\n        ...results, \r\n        [searchKey]: {hits: updatedHits, page}\r\n      },\r\n      isLoading: false\r\n    });\r\n\r\n  }\r\n\r\n  fetchSearchTopStories(searchTerm, page=0){\r\n    this.setState({isLoading: true});\r\n    axios(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n    .then(result => this.setSearchTopStories(result.data))\r\n    .catch(error => this.setState({error}));\r\n  }\r\n\r\n  onSearchSubmit(event){\r\n    const { searchTerm } = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n\r\n    if(this.needsToSearchTopStories(searchTerm)){\r\n      this.fetchSearchTopStories(searchTerm);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const{ searchTerm }=this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    this.fetchSearchTopStories(searchTerm);\r\n  }\r\n\r\n  onDismiss(id){\r\n    const { searchKey, results } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n\r\n    const updatedHits = hits.filter(item => item.objectID !== id);\r\n    \r\n    this.setState({\r\n      results: {...results, \r\n        [searchKey]:{hits: updatedHits, page}\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange(event){\r\n    this.setState({\r\n      searchTerm: event.target.value,\r\n    });\r\n  }\r\n  render(){\r\n    const {searchTerm, results, isSortReverse,searchKey, error, isLoading, sortKey} = this.state;\r\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n\r\n   \r\n\r\n    return (\r\n      <div className=\"page\">\r\n        <div className=\"interactions\">\r\n          <Search \r\n            value={searchTerm}\r\n            onChange={this.onSearchChange}\r\n            onSubmit={this.onSearchSubmit}\r\n          >\r\n            Search\r\n          </Search>\r\n          <div>\r\n            {error?\r\n              <div className=\"interactions\">\r\n              <p>Something went wrong.</p>\r\n              </div>\r\n              :\r\n            <Table \r\n                list={list}\r\n                onDismiss={this.onDismiss}\r\n                sortKey={sortKey}\r\n              />\r\n            }\r\n    \r\n          <div className=\"interactions\">\r\n          <ButtonWithLoading \r\n            isLoading={isLoading}\r\n            onClick = {()=>this.fetchSearchTopStories(searchKey, page+1)}>\r\n              More\r\n            </ButtonWithLoading>\r\n\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n const Search = ({ value, onChange, onSubmit, children }) =>{\r\n     return(\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          type='text' \r\n          value={value}\r\n          onChange={onChange}/>\r\n          <button type=\"submit\">\r\n          {children}\r\n          </button>\r\n      </form>\r\n     );\r\n }\r\n\r\nclass Table extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      sortKey: 'NONE',\r\n      isSortReverse: false\r\n    };\r\n\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey){\r\n    const isSortReversed = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({sortKey, isSortReversed});\r\n  }\r\n\r\n  render(){\r\n    const { list, onDismiss} = this.props;\r\n    const{ sortKey, isSortReverse} = this.state;\r\n   const sortedList = SORTS[sortKey](list);\r\n   const reverseSortedList = isSortReverse? sortedList.reverse(): sortedList;   \r\n   return(\r\n        <div className=\"table\">\r\n        <div className=\"table-header\">\r\n         <span style={{width: '40%'}}>\r\n           <Sort\r\n             sortKey={'TITLE'}\r\n             onSort={this.onSort}\r\n             activeSortKey={sortKey}\r\n           >\r\n             Title\r\n           </Sort>\r\n         </span>\r\n         <span style={{width: '30%'}}>\r\n           <Sort\r\n             sortKey={'AUTHOR'}\r\n             onSort={this.onSort}\r\n             activeSortKey={sortKey}\r\n           >\r\n             Author\r\n           </Sort>\r\n         </span>\r\n         <span style={{width: '10%'}}>\r\n           <Sort\r\n             sortKey={'COMMENTS'}\r\n             onSort={this.onSort}\r\n             activeSortKey={sortKey}\r\n           >\r\n             Comments\r\n           </Sort>\r\n         </span>\r\n         <span style={{width: '10%'}}>\r\n           <Sort\r\n             sortKey={'POINTS'}\r\n             onSort={this.onSort}\r\n             activeSortKey={sortKey}\r\n           >\r\n             Points\r\n           </Sort>\r\n         </span>\r\n         <span style={{width: '10%'}}>\r\n             Archive\r\n         </span>\r\n        </div>\r\n          {reverseSortedList.map((item) =>{\r\n            return(\r\n              <div key={item.objectID} className=\"table-row\">\r\n                <span style={{width: '40%'}}>\r\n                  <a href={item.url}>{item.title}</a>\r\n                </span>\r\n                <span style={{width: '30%'}}>{item.author}</span>\r\n                <span style={{width: '20%'}}>{item.num_comments}</span>\r\n                <span style={{width: '10%'}}>{item.points}</span>\r\n                <span style={{width: '10%'}}>\r\n                  <Button onClick = {()=>onDismiss(item.objectID)}\r\n                   className=\"button-inline\"\r\n                  >\r\n                    Dismiss\r\n                   </Button>\r\n                </span>\r\n              </div>\r\n    \r\n            );\r\n            \r\n          })}\r\n        </div>\r\n       \r\n      );\r\n    }\r\n\r\n}\r\nconst Sort = ({sortKey, onSort, activeSortKey, children})=>{\r\n  const sortClass = ['button-inline'];\r\n\r\n  if(sortKey === activeSortKey){\r\n    sortClass.push('button-active');\r\n  }\r\n  return(\r\n    <Button\r\n      onClick={()=> onSort(sortKey)}\r\n      className={sortClass.join(' ')}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n const Button = ({onClick, className, children})=>{\r\n     return(\r\n       <button\r\n        onClick={onClick}\r\n        className={className}\r\n        type=\"button\"\r\n        >\r\n        {children}\r\n        </button>\r\n     );\r\n    \r\n }\r\n const Loading = ()=>{\r\n  return(\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\nconst withLoading = (Component) => ({isLoading, ...rest}) =>{\r\n    return (isLoading?<Loading />: <Component {...rest} />);\r\n  };\r\n\r\n  const ButtonWithLoading = withLoading(Button);\r\n\r\n //export components to be tested\r\n export{\r\n   Search,\r\n   Table,\r\n   Button\r\n }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass ExplainBindingsComponent extends React.Component{\n    //automatic binding\n    onClickMe = () => {\n        console.log(this);\n    }\n\n    render(){\n        return(\n            <button onClick={this.onClickMe}\n            type='button'>\n            Click Me\n            </button>\n        );\n    }\n}\nReactDOM.render(<App />, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif(module.hot){\n    module.hot.accept();\n}"],"sourceRoot":""}